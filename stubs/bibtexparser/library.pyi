from .model import Block as Block
from .model import Entry as Entry
from .model import ExplicitComment as ExplicitComment
from .model import ImplicitComment as ImplicitComment
from .model import ParsingFailedBlock as ParsingFailedBlock
from .model import Preamble as Preamble
from .model import String as String

class Library:
    def __init__(self, blocks: list[Block] | None = None) -> None: ...
    def add(self, blocks: list[Block] | Block, fail_on_duplicate_key: bool = False) -> None: ...
    def remove(self, blocks: list[Block] | Block) -> None: ...
    def replace(self, old_block: Block, new_block: Block, fail_on_duplicate_key: bool = True) -> None: ...
    @property
    def blocks(self) -> list[Block]: ...
    @property
    def failed_blocks(self) -> list[ParsingFailedBlock]: ...
    @property
    def strings(self) -> list[String]: ...
    @property
    def strings_dict(self) -> dict[str, String]: ...
    @property
    def entries(self) -> list[Entry]: ...
    @property
    def entries_dict(self) -> dict[str, Entry]: ...
    @property
    def preambles(self) -> list[Preamble]: ...
    @property
    def comments(self) -> list[ExplicitComment | ImplicitComment]: ...
